

import struct 

# import math

# tab_sin = []
# tab_cos = []

# for ii in range (0,256):
#     v= int.from_bytes(bytes([ii]), byteorder='big', signed=True)
#     sinv = round(math.sin(v*math.pi/128)*32)
#     cosv = round(math.cos(v*math.pi/128)*32)
#     tab_sin.append(sinv)
#     tab_cos.append(cosv)
#     print (sinv, cosv)


# strsin = "tab_sin = [\n" + ", ".join(map(lambda x: "0x%02x"%(struct.unpack('B',struct.pack("b", x))[0]), tab_sin)) + "]\n"
# strcos = "tab_cos = [\n" + ", ".join(map(lambda x: "0x%02x"%(struct.unpack('B',struct.pack("b", x))[0]), tab_cos)) + "]\n"

# print (strsin)
# print (strcos)


tab_sin = [
    0x00, 0x01, 0x02, 0x02, 0x03, 0x04, 0x05, 0x05, 0x06, 0x07, 0x08, 0x09, 0x09, 0x0a, 0x0b, 0x0c, 
    0x0c, 0x0d, 0x0e, 0x0e, 0x0f, 0x10, 0x10, 0x11, 0x12, 0x12, 0x13, 0x14, 0x14, 0x15, 0x15, 0x16, 
    0x17, 0x17, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x1d, 
    0x1e, 0x1e, 0x1e, 0x1e, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1e, 0x1e, 0x1e, 
    0x1e, 0x1d, 0x1d, 0x1d, 0x1c, 0x1c, 0x1b, 0x1b, 0x1b, 0x1a, 0x1a, 0x19, 0x19, 0x18, 0x18, 0x17, 
    0x17, 0x16, 0x15, 0x15, 0x14, 0x14, 0x13, 0x12, 0x12, 0x11, 0x10, 0x10, 0x0f, 0x0e, 0x0e, 0x0d, 
    0x0c, 0x0c, 0x0b, 0x0a, 0x09, 0x09, 0x08, 0x07, 0x06, 0x05, 0x05, 0x04, 0x03, 0x02, 0x02, 0x01, 
    0x00, 0xff, 0xfe, 0xfe, 0xfd, 0xfc, 0xfb, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf7, 0xf6, 0xf5, 0xf4, 
    0xf4, 0xf3, 0xf2, 0xf2, 0xf1, 0xf0, 0xf0, 0xef, 0xee, 0xee, 0xed, 0xec, 0xec, 0xeb, 0xeb, 0xea, 
    0xe9, 0xe9, 0xe8, 0xe8, 0xe7, 0xe7, 0xe6, 0xe6, 0xe5, 0xe5, 0xe5, 0xe4, 0xe4, 0xe3, 0xe3, 0xe3, 
    0xe2, 0xe2, 0xe2, 0xe2, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 
    0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe2, 0xe2, 0xe2, 
    0xe2, 0xe3, 0xe3, 0xe3, 0xe4, 0xe4, 0xe5, 0xe5, 0xe5, 0xe6, 0xe6, 0xe7, 0xe7, 0xe8, 0xe8, 0xe9, 
    0xe9, 0xea, 0xeb, 0xeb, 0xec, 0xec, 0xed, 0xee, 0xee, 0xef, 0xf0, 0xf0, 0xf1, 0xf2, 0xf2, 0xf3, 
    0xf4, 0xf4, 0xf5, 0xf6, 0xf7, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfb, 0xfc, 0xfd, 0xfe, 0xfe, 0xff
]

tab_cos = [
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1e, 0x1e, 0x1e, 
    0x1e, 0x1d, 0x1d, 0x1d, 0x1c, 0x1c, 0x1b, 0x1b, 0x1b, 0x1a, 0x1a, 0x19, 0x19, 0x18, 0x18, 0x17, 
    0x17, 0x16, 0x15, 0x15, 0x14, 0x14, 0x13, 0x12, 0x12, 0x11, 0x10, 0x10, 0x0f, 0x0e, 0x0e, 0x0d, 
    0x0c, 0x0c, 0x0b, 0x0a, 0x09, 0x09, 0x08, 0x07, 0x06, 0x05, 0x05, 0x04, 0x03, 0x02, 0x02, 0x01, 
    0x00, 0xff, 0xfe, 0xfe, 0xfd, 0xfc, 0xfb, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf7, 0xf6, 0xf5, 0xf4, 
    0xf4, 0xf3, 0xf2, 0xf2, 0xf1, 0xf0, 0xf0, 0xef, 0xee, 0xee, 0xed, 0xec, 0xec, 0xeb, 0xeb, 0xea, 
    0xe9, 0xe9, 0xe8, 0xe8, 0xe7, 0xe7, 0xe6, 0xe6, 0xe5, 0xe5, 0xe5, 0xe4, 0xe4, 0xe3, 0xe3, 0xe3, 
    0xe2, 0xe2, 0xe2, 0xe2, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 
    0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe2, 0xe2, 0xe2, 
    0xe2, 0xe3, 0xe3, 0xe3, 0xe4, 0xe4, 0xe5, 0xe5, 0xe5, 0xe6, 0xe6, 0xe7, 0xe7, 0xe8, 0xe8, 0xe9, 
    0xe9, 0xea, 0xeb, 0xeb, 0xec, 0xec, 0xed, 0xee, 0xee, 0xef, 0xf0, 0xf0, 0xf1, 0xf2, 0xf2, 0xf3, 
    0xf4, 0xf4, 0xf5, 0xf6, 0xf7, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfb, 0xfc, 0xfd, 0xfe, 0xfe, 0xff, 
    0x00, 0x01, 0x02, 0x02, 0x03, 0x04, 0x05, 0x05, 0x06, 0x07, 0x08, 0x09, 0x09, 0x0a, 0x0b, 0x0c, 
    0x0c, 0x0d, 0x0e, 0x0e, 0x0f, 0x10, 0x10, 0x11, 0x12, 0x12, 0x13, 0x14, 0x14, 0x15, 0x15, 0x16, 
    0x17, 0x17, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x1d, 
    0x1e, 0x1e, 0x1e, 0x1e, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
]

def sin(x):
    r = tab_sin[struct.unpack('B',struct.pack("b", x))[0]]
    return int.from_bytes(bytes([r]), byteorder='big', signed=True)

def cos(x):
    r = tab_cos[struct.unpack('B',struct.pack("b", x))[0]]
    return int.from_bytes(bytes([r]), byteorder='big', signed=True)


import math
def main ():
    angdeg =45

    print ("sin : ", sin(round(math.radians(angdeg)*128/math.pi)), round(32*math.sin(math.radians(angdeg)))
    ,"cos : ", cos(round(math.radians(angdeg)*128/math.pi)), round(32*math.cos(math.radians(angdeg)))) 

    angdeg =90

    print ("sin : ", sin(round(math.radians(angdeg)*128/math.pi)), round(32*math.sin(math.radians(angdeg)))
    ,"cos : ", cos(round(math.radians(angdeg)*128/math.pi)), round(32*math.cos(math.radians(angdeg)))) 

    angdeg =-45

    print ("sin : ", sin(round(math.radians(angdeg)*128/math.pi)), round(32*math.sin(math.radians(angdeg)))
    ,"cos : ", cos(round(math.radians(angdeg)*128/math.pi)), round(32*math.cos(math.radians(angdeg)))) 

    angdeg =-90

    print ("sin : ", sin(round(math.radians(angdeg)*128/math.pi)), round(32*math.sin(math.radians(angdeg)))
    ,"cos : ", cos(round(math.radians(angdeg)*128/math.pi)), round(32*math.cos(math.radians(angdeg)))) 


if __name__ == '__main__':
    main()